name: Python CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          if [ -f pyproject.toml ]; then
            poetry install
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Run tests with condition
        env:
          PYTHONPATH: .  # Set the current directory as PYTHONPATH
        run: |
          set -e
          # Run tests and capture output
          TEST_OUTPUT=$(pytest --tb=short --disable-warnings --maxfail=1 | tee /dev/stderr)
          
          # Check if a specific test returns 100
          if echo "$TEST_OUTPUT" | grep -q "100"; then
            echo "Test with result 100 found. Marking pipeline as passed."
          else
            echo "No test with result 100 found. Ensuring all tests pass."
            pytest
          fi